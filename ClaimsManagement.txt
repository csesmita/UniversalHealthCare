Claims Management
-------------------

Claims Management flow is responsible for ensuring claims originating in the system are adjudicated at the earliest. In order to do so, this flow takes into account inputs from an external Fraud Management System (FMS) which strongly accepts, strongly rejects, or advices TPA intervention for a newly filed and documented claim. Every claim that is adjudicated by the system is fed into the FMS as a data point.

The interaction between various modules also ensures that any claim adjudicated in the past, may be re-assessed on input from FMS. This is to ensure that with better data, all fraudulent dealings that occurred in the past may also be analysed and corresponding erring entities be penalized. When acting on such recommendations, detailed analyses is provided to the FMS as feedback, along with the case resolution.

Therefore, to summarize, this document enumerates the relation between various modules in the Claims process, in order to -
1. Ensure faster claims adjudication by assisting IC/TPA in decision making (Adjudication Recommender)
2. Provide data points for Fraud Management Systems(FMS) to capture trends, patterns and anomalies. 
3. Be able to receive requests for audit of past claims from FMS, re-assess them, and provide analyses on these claims back to FMS


High Level Claims Flow Interaction
----------------------------------
----------------------------------

UHC's New Claims Management 
----------------------------
Tags - Inline Claim Analysis, Synchronous Claim Analysis, Realtime Claim Analysis

New claims processing deals with flow executed when a new claim is presented to the engine. FMS acts in real time (within the Adjucation recommendation time) when recommending an adjudication action.

1. New claim processing requested from UHC's Adjudication Recommender System (ARS), with a new claim inserted into Claims DB. This triggers a unique Claims ID to be generated for it.

2. ARS requests Policy/Entity Status Details from Policy DB and Entity DB respectively.

3. Policy DB returns details of Policy. Similarly Claims DB returns any internal state flagging the entities, like blacklisting, etc.

If claim is found to not conform to policy, or documentation is non-conformant, or the entity is blacklisted, it strongly recommends a rejection of the claim along with the appropriate Reject Code and reason text, and exits. Else, it proceeds.

4. ARS requests a secure hash of the entities involved in the claim - doctor, beneficiary and the hospital.

5. Claim Recommendation Requested API - ARS requests a claims recommendation from the Fraud Management System (FMS) based on the hash'ed identifiers of entities involved in the claim (#5), and the claim details itself (claim ID, procedure, amount, number of days the treatment lasted, etc).

6. FMS reverts with a strongly accept, strongly reject, neutral recommendation based on the information provided in #6. More than one FMS might be requested for this information.

(Various FMS might arrive at this claims' recommendation using historic trends for procedure as well as historic trends on beneficiary, doctor and provider.)

7. ARS may also request for current recommendation on entities and store them for logging purposes (High Tendency towards Fraud, Low Tendency Towards Fraud, Neutral).

8. All information received for the claim from FMS is updated for the claim in the ClaimsDB, including any logging information (entity recommendations may be stored in respective entity databases).

9. ARS recommends acceptance, rejection, or TPA intervention (as received), with any additional claims related information/logs.

10. TPA Action - TPA is required to sign off while adjudicating claims. When doing so, TPA's final action is received by the ARS

11. TPA Action is recorded in the Claims DB.

12. Claim Adjudicated API - TPA's action is sent to FMS along with information on TPA action, claim ID, and any reason text.



                                                       ----------
                                                      | Claims DB |  <---                <----           
                                                       ------------     |                      |            
                                                           /|\          |                      | 11. TPA action recorded in           
                                         (1-3). Insert Claim into  8. Update Claims            |     Claims DB       
                                                Claims DB             DB with Recommendation   |  
                                                            |          |     ------------------
                         (4-7). Recommendation              |          |    |               10. TPA action recorded    
 -----------------------  ------------->      ----------------------------------------   <-------------------------   -----
|Fraud Management System|                    |Adjudication Recommendation System (ARS)|  ------ 9. Recommend  ---->  | TPA |
 -----------------------  <-------------      ----------------------------------------             Action to TPA      -----
                        12. Claim resolution       /|\    /|\                                         
                                       -------------       |                                          
                        (1-3). Entity Information       (1-3). Verify Policy Details                           
                                      |                    |                                           
                                -------------            ----------------                                
                               |  Entity DB  |          |Policy Engine DB|                               
                                -------------            ----------------                                                     
                                                                                                       

                                                     UHC's New Claims' Flow




UHC's Offline Adjudicated Claims' Audit Management
---------------------------------------------------
Tags - Offline Claim Analysis, Post facto Claim Analysis, Deferred Claim Analysis

There will also be provision for older, already adjudicated claims to be audited by FMS. These audits are recommended by FMS asynchronously/offline. The flow will be as follows -

1. FMS recommends Claim Audit to ARS - Claim Id, TPA action, hash of entities involved, and audit reason

2. ARS updates Clams DB with audit recommendation request for the provided Claim ID.

3. ARS passes on the Claims Audit recommendation to the TPA

4. TPA updates cases with analyses and provides it to the ARS

5. TPA analyses is updated in the Claims DB.

6. Update to Claims DB also triggers an update notification to the FMS, citing case analyses.

TPA concludes the audit by updating both the Claims DB and FMS with audit anlyses and closure status, along with reason text.
                                                  

                                                       ----------
                                                      | Claims DB |  <----                           
                                                       ------------       |       
                                                          /|\             |
                                                           |              |                                 
                                                  2. Update Claims     5. Update Audit Status       
                                                     DB with Audit        with TPA analyses/closure
                      6. Update Audit Status         Recommendation       |
                         with TPA analyses/closure         |              |                   4. TPA analyses/closure    
 -----------------------   <-------------     ----------------------------------------   <-------------------------   -----
|Fraud Management System|  ------------->    |Adjudication Recommendation System (ARS)|  ------ 3. Recommend  ---->  | TPA |
 -----------------------                      ----------------------------------------             Audit to TPA       -----
                     1. Audit Recommendation                                                          
                                                -------------            ----------------                                
                                               |  Entity DB  |          |Policy Engine DB|                               
                                                -------------            ----------------                                
                                             

                                                UHC's Adjudicated Claims' Audit Flow


Policy Engine Database
-----------------------

The policy engine DB captures details of all policies in the system, as specified by the Policy Rule Engine. This document does not yet define the Policy Rule Engine , but the idea is there shall be a rule engine accepting a policy as a series of rules. or example - these rules may be specified in a JSON format, and ingested by the rule engine. The rule engine will then store policies in the policy databse.

All policies referenced in claims are looked up in the policy DB. Rules should match the presented in the claim. If a mismatch is found, the claim is rejected.


Claims Database
---------------

Claims DB stores all claims ever to originate in the UHC system. Every claim in the system will have a unique 32-byte claim ID which is generated once when a claim originates. 


Entity Database
-----------------

The entity databse contains information of all entities registered in the UHC system. Every entity in the system will have a unique 32-byte identifier which will be a unique identifier associated when a new entity registers in the system.

Entity Databse (or a similar DB) will also contain a reversible and secure hash of the UHC entity identifier to the anonymised external world identifier. This is done in order to interact with the external world (for example - with FMS) without revealing the actual identity of the entity, without losing out on granularity of information extending to per entity.


Adjudication Recommender System (ARS)
--------------------------------------
The Adjudication engine acts as a recommender system for Insurers. It will assist the ICs and TPAs to make faster and more data-driven decisions when a new claim is presented. 

It will also recommend audit of previously adjudicated claims, as recommended by Fraud Management System.

The adjudication engine will do the following -
1. Parse the Policy DB and apply it on the claim presented. 
   If not found in order, the claim is strongly recommended to be rejected, with the reason code and text.

2. Based on FMS input, the Adjudication Engine will either -
   a. Strongly recommend Accepting the claim citing relevant reason presented by FMS
   b. Strongly recommend Rejecting the claim citing relevant reason presented by FMS
   c. Neutral, otherwise 

A TPA sign off is still required in order to set the status of the claims to accepted or rejected. The FMS engine is expected to learn from TPA action on the claim for future.


Practical example from a Fraud Management System Provider
-----------------------------------------------------------
-----------------------------------------------------------

Examples of Commonly Occurring Fraud
---------------------------------------
Some examples of data analysed by Fraud Management System are (courtesy Trendwise Analytics) -

1. Doctors, who treated whopping, say 50+ patients in a day. 
2. Providers administering far higher rates of tests than others. 
3. Providers costing far more, per patient basis, than others. 
4. Providers with high ratio of distance patients. 
5. Providers prescribing certain drugs at higher rate than others. 
6. Distance between claimant’s home address and medical provider 
7. Multiple medical opinions/providers 
8. Changing providers for the same treatment (possibly correlated with other claim activity) 
9. High number of treatments for type of injury 
10. Abnormally long treatment time off for the type of injury 
11. Accident severity does not correlate with severity of injury 
12. Providers billing for services not provided. 
13. Providers administering (more) tests and treatments or providing equipments that are not medically necessary. 
14. Providers administering more expensive tests and equipments (up-coding). 
15. Providers multiple-billing for services rendered. 
16. Providers unbundling or billing separately for laboratory tests performed together to get higher reimbursements. 
17. Providers charging more than peers for the same services. 
18. Providers conducting medically unrelated procedures and services. 
19. Policy holders traveling long distance for treatment which may be available nearby. (Possibly scams by bogus providers.) 
20. Policy holders letting others use their healthcare cards. 

FMS acts as an anonymised, long term database to aggregate past trends and history of entities, in order to present to the Claims engine as required. 


Examples of Entity-Specific Historic Data
-------------------------------------------

1. Percentage of claims filed by the entities (health care provider, Doctor, or the beneficiary) Recommended Accept/ Audited and Accepted
2. Percentage of claims filed by the entities (health care provider, Doctor, or the beneficiary) Recommended Not Accepted/ Audited and Found Fraud
3. Average billed amount / Billed amount for this procedure
4. Number of patients treated (if health care provider) on this day/week/month
5. Reporting Lags
6. Treatment Characteristics and Procedures
7. Years of Experience of Doctor
8. Number of Prior Incidents from Doctor 
9. Number of Unauthorized claims from the entities (rejected by Policy engine)
...


Examples of Aggregated Historic Trends -
-------------------------------------------

1. Average number of claims filed and accepted with high confidence
2. Average number of claims filed and not accepted with high confidence
3. Average number of claims audited and found fraudulent
4. Average Billed amount for this procedure
5. Average number of patients treated per day/week/month
6. Average Reporting Lags
7. Average Treatment Characteristics and Procedures
8. Average Years of Experience of Doctor
9. Average Number of Prior Incidents from Doctor 
10. Average Number of Unauthorized claims from the entities
11. Average number of cases filed by the doctor in one day
12. ...


Fraud Management System (FMS)
------------------------------

A fraud management system is an external entity in the UHC system. It is expected to aid the UHC system in making intelligent decisions to reduce / eliminate fraud. There may be multiple FMS providers in the ecosystem.

FMS systems may be driven by trust score computation when assisting UHC. A trust score is the probability that a given claim is not a fraud. A mathematical predictor model may be used in order to arrive at a trust score for any claim that is under consideration.

Trust score for a claim is computed on both the entities as well as past anonymised trends. There is an implicit entity score (provider score, doctor score, beneficiary score). These are computed at run time to aid computing the claim score. Why are these runtime? A lot of these parameters are based on current trends as well (number of patients treated on this day/week/month, reporting Lags,Treatment Characteristics and Procedures, etc and for beneficiary it might be the number of times claims have been filed in the past week/month/year). Therefore, these scores are moving, and not static. Hence, FMS may calculate entity scores at runtime to arrive at a score for the claim.

Fraud Management System is a generic system which will collect anonymised claims data in order to identify current trends and be able to predict the Trust Score with high accuracy. It is also expected to capture patterns and behaviour of anonymised entities involved in the claim to aid arriving at this score.

This analysis may be applied across Claims, Entities, Procedures, and at geographical units like District, City, State, Country, etc.

FMS providers may also augment data analytics for UHC system in order for various government agencies, insurers and hospitals to monitor the general health of the public.


Incentive to Beneficiaries and FMS to Report Fraud -
-------------------------------------------------------

In order to assist fraud detection, it is suggested that both the beneficiaries and FMS be given incentives to report fraudulent claims and trigger a claims audit. This necessrily means the identity of the beneficiary should be confidential. This will boost the Fraud management system, and also bring in resistance to engaging in unlawful practises.

It is recommended that beneficiaries go through the FMS in order to report fraud, and ensure there is no direct mapping of the beneficiary to its entry in the Entity database.
                                                  

Feedback Loop Augmenting Fraud Detection and Learning
------------------------------------------------------

Every claim feeds back into the fraud management system in order to build a continuous stream of information.
This ensures -
1. Historic trends evolve with time
2. Every data point is captured, and any anomolies can be captured and past claims may be audited.
3. More complex pattern extraction and fraud analysis/detection can be done.

Therefore, any change to a claim in the claims database should also be passed on to the FMS providers in order to ensure better prediction for future claims.


References -
-------------
1. Healthcare Fraud Management using BigData - Whitepaper by Trendwise Analytics
2. 10 popular health care provider fraud schemes - Fraud Magazine

Kiran's comments - 
1. Inline Claims, offline claim status
2. Clarity on what will be acted upon.
3. Clashes between two entities (different fraud management systems)
4. APIs on interaction
5. Incentive for fraud
6. Feed design for FMS should be provided.
